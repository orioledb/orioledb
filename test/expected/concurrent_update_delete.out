Parsed test spec with 3 sessions

starting permutation: begin_1 begin_2 begin_3 select_1 delete_1 insert_1_2 select_1 select_2 select_3 delete_2 select_1 select_3 update_3 select_1 rollback_1 insert_2 select_1 select_2 commit_2 commit_3 select_1 select_2 select_3
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_1: DELETE FROM o_test_1 WHERE val_1 = 1;
step insert_1_2: INSERT INTO o_test_1 VALUES (1, 1);
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_2: DELETE FROM o_test_1 WHERE val_1 = 1; <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_3: 
	UPDATE o_test_1 SET val_2 = 3 WHERE val_1 = 1;
 <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step rollback_1: ROLLBACK;
step delete_2: <... completed>
step insert_2: INSERT INTO o_test_1 VALUES (1, 2);
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step commit_2: COMMIT;
step update_3: <... completed>
step commit_3: COMMIT;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)


starting permutation: begin_1 begin_2 select_1 update_1_1 select_1 select_2 insert_1 insert_1_2 insert_3 select_1 select_2 update_2_4 select_1 commit_1 commit_2 select_1 select_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_1_1: 
	UPDATE o_test_1 SET val_1 = val_1 + 10 WHERE val_1 < 4;
	UPDATE o_test_1 SET val_1 = val_1 - 10 WHERE val_1 = 4;

step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
   -6|  104
    5|  105
   11|  101
   12|  102
   13|  103
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step insert_1: INSERT INTO o_test_1 VALUES (100, 1), (200, 2);
step insert_1_2: INSERT INTO o_test_1 VALUES (1, 1);
step insert_3: INSERT INTO o_test_1 VALUES (2, 3); <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(8 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_2_4: UPDATE o_test_1 SET val_2 = val_2 + 20; <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(8 rows)

step commit_1: COMMIT;
step insert_3: <... completed>
step update_2_4: <... completed>
ERROR:  tuple to be locked has its primary key changed due to concurrent update
step commit_2: COMMIT;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
   -6|  104
    1|    1
    2|    3
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(9 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
   -6|  104
    1|    1
    2|    3
    5|  105
   11|  101
   12|  102
   13|  103
  100|    1
  200|    2
(9 rows)


starting permutation: begin_1 begin_2 begin_3 select_1 delete_1 insert_1_2 select_1 select_2 select_3 delete_2 select_1 select_3 update_3 select_1 commit_1 insert_2 select_1 select_2 commit_2 commit_3 select_1 select_2 select_3
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_1: DELETE FROM o_test_1 WHERE val_1 = 1;
step insert_1_2: INSERT INTO o_test_1 VALUES (1, 1);
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step delete_2: DELETE FROM o_test_1 WHERE val_1 = 1; <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  101
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step update_3: 
	UPDATE o_test_1 SET val_2 = 3 WHERE val_1 = 1;
 <waiting ...>
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step commit_1: COMMIT;
step delete_2: <... completed>
step insert_2: INSERT INTO o_test_1 VALUES (1, 2);
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    1
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|    2
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step commit_2: COMMIT;
step update_3: <... completed>
step commit_3: COMMIT;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)

step select_3: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|    3
    2|  102
    3|  103
    4|  104
    5|  105
(5 rows)


starting permutation: delete_1 begin_1 begin_2 advisory_lock_1 select_2_2 update_1_2 commit_1 advisory_unlock_1 commit_2 select_1 select_2
step delete_1: DELETE FROM o_test_1 WHERE val_1 = 1;
step begin_1: BEGIN;
step begin_2: BEGIN;
step advisory_lock_1: SELECT pg_advisory_lock(16435);
pg_advisory_lock
----------------
                
(1 row)

step select_2_2: SELECT pg_advisory_lock(16435), * FROM o_test_1 FOR KEY SHARE; <waiting ...>
step update_1_2: UPDATE o_test_1 SET val_1 = 1 WHERE val_1 = 3;
step commit_1: COMMIT;
step advisory_unlock_1: SELECT pg_advisory_unlock(16435);
pg_advisory_unlock
------------------
t                 
(1 row)

step select_2_2: <... completed>
ERROR:  tuple to be locked has its primary key changed due to concurrent update
step commit_2: COMMIT;
step select_1: 
	SELECT * FROM o_test_1 ORDER BY val_1;

val_1|val_2
-----+-----
    1|  103
    2|  102
    4|  104
    5|  105
(4 rows)

step select_2: SELECT * FROM o_test_1 ORDER BY val_1;
val_1|val_2
-----+-----
    1|  103
    2|  102
    4|  104
    5|  105
(4 rows)

