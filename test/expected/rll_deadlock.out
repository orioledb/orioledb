unused step name: savepoint_1_a
Parsed test spec with 3 sessions

starting permutation: begin_1 begin_2 begin_3 share_1 for_update_2 share_3 for_update_3 rollback_1 rollback_3 rollback_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR SHARE;
val_1
-----
    1
(1 row)

step for_update_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step share_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR SHARE;
val_1
-----
    1
(1 row)

step for_update_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step rollback_1: ROLLBACK;
step for_update_3: <... completed>
val_1
-----
    1
(1 row)

step rollback_3: ROLLBACK;
step for_update_2: <... completed>
val_1
-----
    1
(1 row)

step rollback_2: ROLLBACK;

starting permutation: begin_1 begin_2 begin_3 key_share_1 for_update_2 key_share_3 update_1 update_3 rollback_1 rollback_3 rollback_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step key_share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step for_update_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step key_share_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step update_1: UPDATE o_test_1 set val_2 = 2 WHERE val_1 = 1;
step update_3: UPDATE o_test_1 SET val_2 = 2 WHERE val_1 = 1; <waiting ...>
step rollback_1: ROLLBACK;
step update_3: <... completed>
step rollback_3: ROLLBACK;
step for_update_2: <... completed>
val_1
-----
    1
(1 row)

step rollback_2: ROLLBACK;

starting permutation: begin_1 begin_2 begin_3 key_share_1 for_update_2 key_share_3 update_1 update_3 commit_1 rollback_3 rollback_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step key_share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step for_update_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step key_share_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step update_1: UPDATE o_test_1 set val_2 = 2 WHERE val_1 = 1;
step update_3: UPDATE o_test_1 SET val_2 = 2 WHERE val_1 = 1; <waiting ...>
step commit_1: COMMIT;
step update_3: <... completed>
step rollback_3: ROLLBACK;
step for_update_2: <... completed>
val_1
-----
    1
(1 row)

step rollback_2: ROLLBACK;

starting permutation: begin_1 begin_2 begin_3 key_share_1 for_update_2 key_share_3 delete_3 rollback_1 rollback_3 rollback_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step key_share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step for_update_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step key_share_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step delete_3: DELETE FROM o_test_1 WHERE val_1 = 1; <waiting ...>
step rollback_1: ROLLBACK;
step delete_3: <... completed>
step rollback_3: ROLLBACK;
step for_update_2: <... completed>
val_1
-----
    1
(1 row)

step rollback_2: ROLLBACK;

starting permutation: begin_1 begin_2 begin_3 key_share_1 for_update_2 key_share_3 delete_3 rollback_1 commit_3 rollback_2
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step key_share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step for_update_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step key_share_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step delete_3: DELETE FROM o_test_1 WHERE val_1 = 1; <waiting ...>
step rollback_1: ROLLBACK;
step delete_3: <... completed>
step commit_3: COMMIT;
step for_update_2: <... completed>
val_1
-----
(0 rows)

step rollback_2: ROLLBACK;

starting permutation: begin_1 begin_2 begin_3 key_share_1 for_update_3 forkeyshare_2 savepoint_1_b share_1 savepoint_1_b fornokeyupd_1 fornokeyupd_2 rollback_1_b rollback_1_a rollback_1 rollback_2 rollback_3
step begin_1: BEGIN;
step begin_2: BEGIN;
step begin_3: BEGIN;
step key_share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step for_update_3: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR UPDATE; <waiting ...>
step forkeyshare_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR KEY SHARE;
val_1
-----
    1
(1 row)

step savepoint_1_b: savepoint b;
step share_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR SHARE;
val_1
-----
    1
(1 row)

step savepoint_1_b: savepoint b;
step fornokeyupd_1: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR NO KEY UPDATE;
val_1
-----
    1
(1 row)

step fornokeyupd_2: SELECT val_1 FROM o_test_1 WHERE val_1 = 1 FOR NO KEY UPDATE; <waiting ...>
step rollback_1_b: ROLLBACK to b;
step rollback_1_a: ROLLBACK to a;
ERROR:  savepoint "a" does not exist
step rollback_1: ROLLBACK;
step fornokeyupd_2: <... completed>
val_1
-----
    1
(1 row)

step rollback_2: ROLLBACK;
step for_update_3: <... completed>
val_1
-----
    1
(1 row)

step rollback_3: ROLLBACK;
