Parsed test spec with 2 sessions

starting permutation: s1_cross_update s2_value_update s1_commit s2_commit
step s1_cross_update: 
	UPDATE o_test SET key = key + 1 WHERE key = 1;

step s2_value_update: 
	UPDATE o_test SET val = val || 'xxx' WHERE key = 1;
 <waiting ...>
step s1_commit: COMMIT;
step s2_value_update: <... completed>
ERROR:  tuple to be locked was already moved to another partition due to concurrent update
step s2_commit: COMMIT;

starting permutation: s1_cross_update s2_key_update s1_commit s2_commit
step s1_cross_update: 
	UPDATE o_test SET key = key + 1 WHERE key = 1;

step s2_key_update: 
	UPDATE o_test SET key = 4 WHERE key = 1;
 <waiting ...>
step s1_commit: COMMIT;
step s2_key_update: <... completed>
ERROR:  tuple to be locked was already moved to another partition due to concurrent update
step s2_commit: COMMIT;

starting permutation: s1_cross_update s2_delete s1_commit s2_commit
step s1_cross_update: 
	UPDATE o_test SET key = key + 1 WHERE key = 1;

step s2_delete: 
	DELETE FROM o_test WHERE key = 1;
 <waiting ...>
step s1_commit: COMMIT;
step s2_delete: <... completed>
ERROR:  tuple to be locked was already moved to another partition due to concurrent update
step s2_commit: COMMIT;
