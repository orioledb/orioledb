CREATE SCHEMA btree_sys_check;
SET SESSION search_path = 'btree_sys_check';
CREATE EXTENSION orioledb;
SELECT split_part(setting, '.', 1) major_version
	FROM pg_settings WHERE name = 'server_version';
 major_version 
---------------
 16
(1 row)

CREATE TABLE o_test(
	id integer NOT NULL,
	val text NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(id, val)
) USING orioledb;
CREATE TABLE o_test_child(
	id integer NOT NULL,
	o_test_ID integer NOT NULL REFERENCES o_test (id),
	PRIMARY KEY(id)
) USING orioledb;
INSERT INTO o_test(id, val) VALUES (1, 'hello');
INSERT INTO o_test(id, val) VALUES (2, 'hey');
INSERT INTO o_test_child(id, o_test_ID) VALUES (1, 1);
INSERT INTO o_test_child(id, o_test_ID) VALUES (2, 2);
UPDATE o_test SET val = 'new_dog' where id = 7;
UPDATE o_test SET id = 10 where id = 3;
DELETE FROM o_test_child where o_test_ID = 1;
DELETE FROM o_test where id = 1;
SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_table_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
   relname    | refcnt 
--------------+--------
 o_test       |      1
 o_test_child |      1
(2 rows)

SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_index_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
      relname      | refcnt 
-------------------+--------
 o_test_child_pkey |      1
 o_test_id_val_key |      1
 o_test_pkey       |      1
 pg_toast_NNN      |      1
 pg_toast_NNN      |      1
(5 rows)

DROP TABLE IF EXISTS o_test_child;
DROP TABLE IF EXISTS o_test;
CREATE TYPE o_enum AS ENUM ('a', 'b', 'c');
ALTER TYPE o_enum ADD VALUE 'd';
ALTER TYPE o_enum RENAME VALUE 'd' TO 'e';
CREATE TYPE custom_range as range (subtype=int8);
CREATE TYPE custom_type AS (x timestamp, y float);
CREATE TABLE o_test_sys_caches (
	key o_enum,
	key2 custom_range,
	key3 custom_type,
	key4 int[],
	PRIMARY KEY(key, key2, key3, key4)
) USING orioledb;
DROP TYPE custom_range CASCADE;
NOTICE:  drop cascades to column key2 of table o_test_sys_caches
DROP TABLE o_test_sys_caches;
DROP TYPE o_enum;
DROP TYPE custom_type;
CHECKPOINT;
-- SYS_TREES_SHARED_ROOT_INFO
SELECT regexp_replace(
		orioledb_sys_tree_structure(1, 'ne'),
		'\(\d+, \d+\), \d+, \d+\)',
		'(NNN, NNN), NNN, NNN)',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_O_TABLES
SELECT regexp_replace(
		orioledb_sys_tree_structure(2, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 5728                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ((NNN, NNN, NNN), 0, 1)  +
     Item 0: deleted, offset = 264, tuple = (((NNN, NNN, NNN), 0, 1), 258)                    +
   Chunk 1: offset = 1, location = 568, hikey location = 104, hikey = ((NNN, NNN, NNN), 0, 0) +
     Item 1: deleted, offset = 576, tuple = (((NNN, NNN, NNN), 0, 1), 1774)                   +
   Chunk 2: offset = 2, location = 2392, hikey location = 128, hikey = ((NNN, NNN, NNN), 0, 1)+
     Item 2: deleted, offset = 2400, tuple = (((NNN, NNN, NNN), 0, 1), 258)                   +
     Item 3: deleted, offset = 2704, tuple = (((NNN, NNN, NNN), 0, 0), 1016)                  +
   Chunk 3: offset = 4, location = 3760, hikey location = 152, hikey = ((NNN, NNN, NNN), 0, 0)+
     Item 4: deleted, offset = 3768, tuple = (((NNN, NNN, NNN), 0, 1), 452)                   +
   Chunk 4: offset = 5, location = 4264, hikey location = 176                                 +
     Item 5: deleted, offset = 4272, tuple = (((NNN, NNN, NNN), 0, 0), 1210)                  +
     Item 6: deleted, offset = 5528, tuple = (((NNN, NNN, NNN), 0, 1), 452)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_O_INDICES
SELECT regexp_replace(
		orioledb_sys_tree_structure(3, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 4832                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = (1, (NNN, NNN, NNN), 0)  +
     Item 0: deleted, offset = 264, tuple = ((1, (NNN, NNN, NNN), 0), 665)                    +
   Chunk 1: offset = 1, location = 976, hikey location = 96, hikey = (3, (NNN, NNN, NNN), 0)  +
     Item 1: deleted, offset = 984, tuple = ((1, (NNN, NNN, NNN), 0), 1001)                   +
     Item 2: deleted, offset = 2032, tuple = ((1, (NNN, NNN, NNN), 0), 665)                   +
   Chunk 2: offset = 3, location = 2744, hikey location = 120, hikey = (3, (NNN, NNN, NNN), 0)+
     Item 3: deleted, offset = 2752, tuple = ((3, (NNN, NNN, NNN), 0), 777)                   +
   Chunk 3: offset = 4, location = 3576, hikey location = 144                                 +
     Item 4: deleted, offset = 3584, tuple = ((3, (NNN, NNN, NNN), 0), 665)                   +
     Item 5: deleted, offset = 4296, tuple = ((3, (NNN, NNN, NNN), 0), 777)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_OPCLASS_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(4, 'ne'),
		'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
		'NNN, (NNN), X/X, ',
		'g');
                                                     regexp_replace                                                      
-------------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 0                                                                   +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                                                    +
     Leftmost, Rightmost                                                                                                +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                             +
     Item 0: offset = 288, tuple = ((NNN, (NNN), X/X, N), opfamily: 1976, inputtype: 23, cmpOid: 351, ssupOid: 3130)    +
     Item 1: offset = 352, tuple = ((NNN, (NNN), X/X, N), opfamily: 1976, inputtype: 21, cmpOid: 350, ssupOid: 3129)    +
     Item 2: offset = 416, tuple = ((NNN, (NNN), X/X, N), opfamily: 1970, inputtype: 701, cmpOid: 355, ssupOid: 3133)   +
     Item 3: offset = 480, tuple = ((NNN, (NNN), X/X, N), opfamily: 1976, inputtype: 20, cmpOid: 842, ssupOid: 3131)    +
     Item 4: offset = 544, tuple = ((NNN, (NNN), X/X, N), opfamily: 1994, inputtype: 25, cmpOid: 360, ssupOid: 3255)    +
     Item 5: offset = 608, tuple = ((NNN, (NNN), X/X, N), opfamily: 434, inputtype: 1114, cmpOid: 2045, ssupOid: 3137)  +
     Item 6: offset = 672, tuple = ((NNN, (NNN), X/X, N), opfamily: 397, inputtype: 2277, cmpOid: 382, ssupOid: 0)      +
     Item 7: offset = 736, tuple = ((NNN, (NNN), X/X, N), opfamily: 1971, inputtype: 701, cmpOid: 452, ssupOid: 444)    +
     Item 8: offset = 800, tuple = ((NNN, (NNN), X/X, N), opfamily: 1977, inputtype: 23, cmpOid: 450, ssupOid: 425)     +
     Item 9: offset = 864, tuple = ((NNN, (NNN), X/X, N), opfamily: 2994, inputtype: 2249, cmpOid: 2987, ssupOid: 0)    +
     Item 10: offset = 928, tuple = ((NNN, (NNN), X/X, N), opfamily: 2040, inputtype: 1114, cmpOid: 2039, ssupOid: 3411)+
     Item 11: offset = 992, tuple = ((NNN, (NNN), X/X, N), opfamily: 2789, inputtype: 27, cmpOid: 2794, ssupOid: 0)     +
     Item 12: offset = 1056, tuple = ((NNN, (NNN), X/X, N), opfamily: 3522, inputtype: 3500, cmpOid: 3514, ssupOid: 0)  +
     Item 13: offset = 1120, tuple = ((NNN, (NNN), X/X, N), opfamily: 3901, inputtype: 3831, cmpOid: 3870, ssupOid: 0)  +
                                                                                                                        +
 
(1 row)

-- SYS_TREES_ENUM_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(5, 'ne'),
			'\d+, \(\d+, ("\w+")\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN, \1), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                               regexp_replace                                                
-------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 104, nVacatedBytes = 640                                                    +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                        +
     Leftmost, Rightmost                                                                                    +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                 +
     Item 0: deleted, offset = 272, tuple = ((NNN, (NNN, "a"), X/X, Y), oid: NNN, enumsortorder: NNN.000000)+
     Item 1: deleted, offset = 400, tuple = ((NNN, (NNN, "b"), X/X, Y), oid: NNN, enumsortorder: NNN.000000)+
     Item 2: deleted, offset = 528, tuple = ((NNN, (NNN, "c"), X/X, Y), oid: NNN, enumsortorder: NNN.000000)+
     Item 3: deleted, offset = 656, tuple = ((NNN, (NNN, "d"), X/X, Y), oid: NNN, enumsortorder: NNN.000000)+
     Item 4: deleted, offset = 784, tuple = ((NNN, (NNN, "e"), X/X, Y), oid: NNN, enumsortorder: NNN.000000)+
                                                                                                            +
 
(1 row)

-- SYS_TREES_ENUMOID_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(6, 'ne'),
		'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ([YN])\), \d+',
		'NNN, (NNN), X/X, \1), NNN',
		'g');
                             regexp_replace                             
------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 224                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty   +
     Leftmost, Rightmost                                               +
   Chunk 0: offset = 0, location = 256, hikey location = 64            +
     Item 0: deleted, offset = 264, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 1: deleted, offset = 320, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 2: deleted, offset = 376, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 3: deleted, offset = 432, tuple = ((NNN, (NNN), X/X, Y), NNN)+
                                                                       +
 
(1 row)

-- SYS_TREES_RANGE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(7, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                                    regexp_replace                                                     
-----------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 64                                                                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                  +
     Leftmost, Rightmost                                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                           +
     Item 0: deleted, offset = 264, tuple = ((NNN, (NNN), X/X, Y), rngsubtype: NNN, rngcollation: NNN, rngsubopc: NNN)+
                                                                                                                      +
 
(1 row)

-- SYS_TREES_CLASS_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(8, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                         regexp_replace                                          
-------------------------------------------------------------------------------------------------
 Page 0: level = 1, maxKeyLen = 40                                                              +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                            +
     Leftmost, Rightmost                                                                        +
   Chunk 0: offset = 0, location = 512, hikey location = 64                                     +
     Item 0: offset = 520, downlink = 1                                                         +
     Item 1: offset = 528, downlink = 2, key = ((NNN, (NNN), X/X, N), 0)                        +
     Item 2: offset = 576, downlink = 3, key = ((NNN, (NNN), X/X, N), 0)                        +
                                                                                                +
 Page 1: level = 0, maxKeyLen = 40, nVacatedBytes = 0                                           +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                            +
     Leftmost, Rightlink is invalid                                                             +
     Hikey: offset = 152, key = ((NNN, (NNN), X/X, N), 0)                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = ((NNN, (NNN), X/X, N), 1)  +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 2628)                            +
   Chunk 1: offset = 1, location = 2952, hikey location = 112, hikey = ((NNN, (NNN), X/X, N), 1)+
     Item 1: offset = 2960, tuple = (((NNN, (NNN), X/X, N), 1), 868)                            +
     Item 2: offset = 3888, tuple = (((NNN, (NNN), X/X, N), 0), 2628)                           +
   Chunk 2: offset = 3, location = 6576, hikey location = 152, hikey = ((NNN, (NNN), X/X, N), 0)+
     Item 3: offset = 6584, tuple = (((NNN, (NNN), X/X, N), 1), 652)                            +
                                                                                                +
 Page 2: level = 0, maxKeyLen = 40, nVacatedBytes = 0                                           +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                            +
     Rightlink is invalid                                                                       +
     Hikey: offset = 104, key = ((NNN, (NNN), X/X, N), 0)                                       +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ((NNN, (NNN), X/X, N), 0)  +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 1336)                            +
   Chunk 1: offset = 1, location = 1664, hikey location = 104, hikey = ((NNN, (NNN), X/X, N), 0)+
     Item 1: offset = 1672, tuple = (((NNN, (NNN), X/X, N), 0), 1012)                           +
     Item 2: offset = 2744, tuple = (((NNN, (NNN), X/X, N), 0), 688)                            +
                                                                                                +
 Page 3: level = 0, maxKeyLen = 40, nVacatedBytes = 320                                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                            +
     Rightmost                                                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ((NNN, (NNN), X/X, N), 0)  +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 1012)                            +
   Chunk 1: offset = 1, location = 1336, hikey location = 104                                   +
     Item 1: offset = 1344, tuple = (((NNN, (NNN), X/X, N), 0), 1336)                           +
     Item 2: offset = 2744, tuple = (((NNN, (NNN), X/X, N), 0), 472)                            +
     Item 3: offset = 3280, tuple = (((NNN, (NNN), X/X, N), 0), 796)                            +
     Item 4: deleted, offset = 4136, tuple = (((NNN, (NNN), X/X, Y), 0), 256)                   +
                                                                                                +
 
(1 row)

-- SYS_TREES_EXTENTS_OFF_LEN
SELECT orioledb_sys_tree_structure(9, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_EXTENTS_LEN_OFF
SELECT orioledb_sys_tree_structure(10, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_PROC_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(11, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 0                                         +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = ((NNN, (NNN), X/X, N), 0)+
     Item 0: offset = 288, tuple = (((NNN, (NNN), X/X, N), 0), 108)                           +
     Item 1: offset = 456, tuple = (((NNN, (NNN), X/X, N), 0), 108)                           +
     Item 2: offset = 624, tuple = (((NNN, (NNN), X/X, N), 0), 112)                           +
     Item 3: offset = 800, tuple = (((NNN, (NNN), X/X, N), 0), 108)                           +
     Item 4: offset = 968, tuple = (((NNN, (NNN), X/X, N), 0), 110)                           +
     Item 5: offset = 1144, tuple = (((NNN, (NNN), X/X, N), 0), 122)                          +
     Item 6: offset = 1328, tuple = (((NNN, (NNN), X/X, N), 0), 126)                          +
     Item 7: offset = 1520, tuple = (((NNN, (NNN), X/X, N), 0), 102)                          +
     Item 8: offset = 1688, tuple = (((NNN, (NNN), X/X, N), 0), 106)                          +
     Item 9: offset = 1856, tuple = (((NNN, (NNN), X/X, N), 0), 108)                          +
     Item 10: offset = 2024, tuple = (((NNN, (NNN), X/X, N), 0), 114)                         +
     Item 11: offset = 2200, tuple = (((NNN, (NNN), X/X, N), 0), 116)                         +
     Item 12: offset = 2376, tuple = (((NNN, (NNN), X/X, N), 0), 106)                         +
     Item 13: offset = 2544, tuple = (((NNN, (NNN), X/X, N), 0), 112)                         +
   Chunk 1: offset = 14, location = 2720, hikey location = 104                                +
     Item 14: offset = 2744, tuple = (((NNN, (NNN), X/X, N), 0), 120)                         +
     Item 15: offset = 2928, tuple = (((NNN, (NNN), X/X, N), 0), 120)                         +
     Item 16: offset = 3112, tuple = (((NNN, (NNN), X/X, N), 0), 120)                         +
     Item 17: offset = 3296, tuple = (((NNN, (NNN), X/X, N), 0), 124)                         +
     Item 18: offset = 3480, tuple = (((NNN, (NNN), X/X, N), 0), 128)                         +
     Item 19: offset = 3672, tuple = (((NNN, (NNN), X/X, N), 0), 120)                         +
     Item 20: offset = 3856, tuple = (((NNN, (NNN), X/X, N), 0), 136)                         +
     Item 21: offset = 4056, tuple = (((NNN, (NNN), X/X, N), 0), 106)                         +
     Item 22: offset = 4224, tuple = (((NNN, (NNN), X/X, N), 0), 108)                         +
                                                                                              +
 
(1 row)

-- SYS_TREES_TYPE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(12, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                                                                                                                                                                                                         regexp_replace                                                                                                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 528                                                                                                                                                                                                                                                                                                                                                                                                         +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                                                                                                                                                                                                                                                                                                                                                            +
     Leftmost, Rightmost                                                                                                                                                                                                                                                                                                                                                                                                                                        +
   Chunk 0: offset = 0, location = 256, hikey location = 64, hikey = (NNN, (NNN), X/X, N)                                                                                                                                                                                                                                                                                                                                                                       +
     Item 0: offset = 272, tuple = ((NNN, (NNN), X/X, N), typname: int8, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                  +
     Item 1: offset = 448, tuple = ((NNN, (NNN), X/X, N), typname: int2, typlen: NNN, typbyval: Y, typalign: 's', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                  +
     Item 2: offset = 624, tuple = ((NNN, (NNN), X/X, N), typname: int4, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                  +
     Item 3: offset = 800, tuple = ((NNN, (NNN), X/X, N), typname: text, typlen: -1, typbyval: N, typalign: 'i', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'S', typispreferred: Y, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                   +
     Item 4: offset = 976, tuple = ((NNN, (NNN), X/X, N), typname: tid, typlen: NNN, typbyval: N, typalign: 's', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'U', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                   +
     Item 5: offset = 1152, tuple = ((NNN, (NNN), X/X, N), typname: float8, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: Y, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)               +
     Item 6: offset = 1328, tuple = ((NNN, (NNN), X/X, N), typname: timestamp, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'D', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)            +
   Chunk 1: offset = 7, location = 1504, hikey location = 96                                                                                                                                                                                                                                                                                                                                                                                                    +
     Item 7: offset = 1528, tuple = ((NNN, (NNN), X/X, N), typname: record, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                +
     Item 8: offset = 1704, tuple = ((NNN, (NNN), X/X, N), typname: anyarray, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)              +
     Item 9: offset = 1880, tuple = ((NNN, (NNN), X/X, N), typname: void, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)                 +
     Item 10: offset = 2056, tuple = ((NNN, (NNN), X/X, N), typname: internal, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)            +
     Item 11: offset = 2232, tuple = ((NNN, (NNN), X/X, N), typname: anyenum, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)             +
     Item 12: offset = 2408, tuple = ((NNN, (NNN), X/X, N), typname: anyrange, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)             +
     Item 13: deleted, offset = 2584, tuple = ((NNN, (NNN), X/X, Y), typname: o_enum, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'e', typcategory: 'E', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)     +
     Item 14: deleted, offset = 2760, tuple = ((NNN, (NNN), X/X, Y), typname: custom_range, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'r', typcategory: 'R', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN)+
     Item 15: deleted, offset = 2936, tuple = ((NNN, (NNN), X/X, Y), typname: custom_type, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'c', typcategory: 'C', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', typbasetype: NNN, typtypmod: -1, typsubscript: NNN, default_btree_opclass: NNN, default_hash_opclass: NNN) +
                                                                                                                                                                                                                                                                                                                                                                                                                                                                +
 
(1 row)

-- SYS_TREES_AGG_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(13, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_OPER_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(14, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_AMOP_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(15, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_AMPROC_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(16, 'ne'),
			'\d+, \(\d+, \d+, \d+, \d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                             regexp_replace                              
-------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 56, nVacatedBytes = 0                   +
 state = free, datoid equal, relnode equal, ix_type = primary, clean    +
     Leftmost, Rightmost                                                +
   Chunk 0: offset = 0, location = 256, hikey location = 64             +
     Item 0: offset = 296, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 1: offset = 376, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 2: offset = 456, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 3: offset = 536, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 4: offset = 616, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 5: offset = 696, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 6: offset = 776, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 7: offset = 856, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 8: offset = 936, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)  +
     Item 9: offset = 1016, tuple = ((NNN, (NNN), X/X, N), amproc: NNN) +
     Item 10: offset = 1096, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 11: offset = 1176, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 12: offset = 1256, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 13: offset = 1336, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 14: offset = 1416, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 15: offset = 1496, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
     Item 16: offset = 1576, tuple = ((NNN, (NNN), X/X, N), amproc: NNN)+
                                                                        +
 
(1 row)

-- SYS_TREES_COLLATION_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(17, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 144) +
                                                                    +
 
(1 row)

-- SYS_TREES_DATABASE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(18, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 50)  +
     Item 1: offset = 376, tuple = (((NNN, (NNN), X/X, N), 0), 50)  +
                                                                    +
 
(1 row)

-- SYS_TREES_AMOP_STRAT_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(19, 'ne'),
			'\d+, \(\d+, \d+, \d+, \d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                              regexp_replace                              
--------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 56, nVacatedBytes = 0                    +
 state = free, datoid equal, relnode equal, ix_type = primary, clean     +
     Leftmost, Rightmost                                                 +
   Chunk 0: offset = 0, location = 256, hikey location = 64              +
     Item 0: offset = 328, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 1: offset = 408, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 2: offset = 488, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 3: offset = 568, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 4: offset = 648, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 5: offset = 728, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 6: offset = 808, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 7: offset = 888, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 8: offset = 968, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)  +
     Item 9: offset = 1048, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN) +
     Item 10: offset = 1128, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 11: offset = 1208, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 12: offset = 1288, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 13: offset = 1368, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 14: offset = 1448, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 15: offset = 1528, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 16: offset = 1608, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 17: offset = 1688, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 18: offset = 1768, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 19: offset = 1848, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 20: offset = 1928, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 21: offset = 2008, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 22: offset = 2088, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 23: offset = 2168, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 24: offset = 2248, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 25: offset = 2328, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 26: offset = 2408, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 27: offset = 2488, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 28: offset = 2568, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 29: offset = 2648, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 30: offset = 2728, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 31: offset = 2808, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
     Item 32: offset = 2888, tuple = ((NNN, (NNN), X/X, N), amopopr: NNN)+
                                                                         +
 
(1 row)

-- SYS_TREES_EVICTED_DATA
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(20, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_CHKP_NUM
SELECT regexp_replace(
		orioledb_sys_tree_structure(21, 'ne'),
		'\(\d+, \d+\), ',
		'(NNN, NNN), ',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_MULTIRANGE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(22, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- fail
SELECT orioledb_sys_tree_structure(9999);
ERROR:  Value num must be in the range from 1 to 22
SELECT orioledb_sys_tree_check(-1111);
ERROR:  Value num must be in the range from 1 to 22
DROP EXTENSION orioledb CASCADE;
DROP SCHEMA btree_sys_check CASCADE;
RESET search_path;
