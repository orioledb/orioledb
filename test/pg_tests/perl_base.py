from inspect import cleandoc
import os
from textwrap import dedent, indent

from test.pg_tests.utils import file_name_to_test_name


def generate_perl_test_calls(tests, single_test_path, include_path, test_path,
                             expectedFailures, temp_config_path):
	with open(single_test_path, 'w') as f:
		f.write(
		    cleandoc(f"""
			# generated by test/pg_tests/isolation.py
			from ..t.base_test import BaseTest
			from .utils import prove
			from unittest import expectedFailure

			class Run(BaseTest):
		"""))
		f.write(
		    indent(
		        dedent(f"""
				test_path = "{test_path}"
				include_path = "{include_path}"
				temp_config_path = "{temp_config_path}"
		"""), "\t"))
		for test in tests:
			if test not in expectedFailures:
				decorator = ""
			else:
				decorator = "@expectedFailure"
			f.write(
			    indent(
			        dedent(f"""
				{decorator}
				def {file_name_to_test_name(test)}(self):
					node = self.node
					node.append_conf(default_table_access_method='orioledb')
					# node.start()
					prove(node, "{test}", self.test_path, self.include_path, self.temp_config_path, verbose=True)
					# node.stop()
			"""), "\t"))
