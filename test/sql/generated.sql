CREATE SCHEMA generated_test;
SET SESSION search_path = 'generated_test';
CREATE EXTENSION orioledb;

CREATE TABLE o_test_generated (
	a int,
	b int GENERATED ALWAYS AS (a * 2) STORED
) USING orioledb;

INSERT INTO o_test_generated VALUES (1), (2);
SELECT * FROM o_test_generated;

CREATE TABLE o_test_generated_like (
	LIKE o_test_generated INCLUDING GENERATED
) USING orioledb;

INSERT INTO o_test_generated_like VALUES (5), (6);
SELECT * FROM o_test_generated_like;

CREATE TABLE o_test_drop_expression (
    a int,
	b int GENERATED ALWAYS AS (a * 2) STORED
) USING orioledb;

INSERT INTO o_test_drop_expression VALUES (1);
INSERT INTO o_test_drop_expression VALUES (2);
SELECT * FROM o_test_drop_expression;

ALTER TABLE o_test_drop_expression ALTER COLUMN a DROP EXPRESSION;
ALTER TABLE o_test_drop_expression ALTER COLUMN b DROP EXPRESSION;

INSERT INTO o_test_drop_expression VALUES (3);
SELECT * FROM o_test_drop_expression;


CREATE TABLE o_test_add_identity_exist (
    a SMALLINT GENERATED BY DEFAULT AS IDENTITY (START WITH 7 INCREMENT BY 5),
    b TEXT
) USING orioledb;

ALTER TABLE o_test_add_identity_exist
	ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
INSERT INTO o_test_add_identity_exist (b) VALUES ('a'), ('b'), ('c');
SELECT * FROM o_test_add_identity_exist;

CREATE TABLE o_test_add_identity (
    a SMALLINT,
    b TEXT
) USING orioledb;
ALTER TABLE o_test_add_identity
	ALTER COLUMN a SET NOT NULL,
	ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
INSERT INTO o_test_add_identity (b) VALUES ('a'), ('b'), ('c');
SELECT * FROM o_test_add_identity;

ALTER TABLE o_test_add_identity
	ALTER COLUMN a RESTART WITH 10;
INSERT INTO o_test_add_identity (b) VALUES ('A'), ('B'), ('C');
SELECT * FROM o_test_add_identity;

ALTER TABLE o_test_add_identity
	ALTER COLUMN a DROP IDENTITY,
	ALTER COLUMN a DROP NOT NULL;
INSERT INTO o_test_add_identity (b) VALUES ('X'), ('Y'), ('Z');
SELECT * FROM o_test_add_identity;

CREATE TABLE o_test_generated_null (
    val_1 text,
    val_2 int GENERATED ALWAYS AS (1 + COALESCE(val_3::text, '0')::int) STORED,
	val_3 int DEFAULT 5
) USING orioledb;
\d+ o_test_generated_null
INSERT INTO o_test_generated_null (val_1, val_3) VALUES (1, NULL);
INSERT INTO o_test_generated_null (val_1, val_3) VALUES (NULL, NULL);
SELECT orioledb_tbl_structure('o_test_generated_null'::regclass, 'nue');
SELECT * FROM o_test_generated_null;

CREATE TABLE o_test_tableoid (
  val_1 int PRIMARY KEY,
  val_2 bool GENERATED ALWAYS
    AS (tableoid = 'o_test_tableoid'::regclass) STORED
) USING orioledb;

INSERT INTO o_test_tableoid VALUES (1), (2);

ALTER TABLE o_test_tableoid ADD COLUMN
  val_3 regclass GENERATED ALWAYS AS (tableoid) STORED;

SELECT * FROM o_test_tableoid;

CREATE TABLE o_test_generated_alter_type (
    val_1 int,
    val_3 int GENERATED ALWAYS AS (val_1 * 2) STORED
) USING orioledb;

INSERT INTO o_test_generated_alter_type (val_1) VALUES (1), (3);
SELECT * FROM o_test_generated_alter_type;
SELECT orioledb_tbl_structure('o_test_generated_alter_type'::regclass, 'nue');

ALTER TABLE o_test_generated_alter_type ALTER COLUMN val_3 TYPE numeric;
SELECT * FROM o_test_generated_alter_type;

DROP EXTENSION orioledb CASCADE;
DROP SCHEMA generated_test CASCADE;
RESET search_path;
