name: build

on:
  push:
  pull_request:

jobs:
  test:
    runs-on:
     - ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        pg_version: [15, 16]
        compiler: [clang, gcc]
        check_type: [normal, debug, alignment, check_page, valgrind_1, valgrind_2]
    env:
      LLVM_VER: 12
      CPU: ${{ matrix.cpu }}
      CHECK_TYPE: ${{ matrix.check_type }}
      COMPILER: ${{ matrix.compiler }}
    steps:
      - name: Checkout extension code into workspace directory
        uses: actions/checkout@v3
        with:
          path: orioledb
      - name: Get the required tag name
        shell: bash
        run: |
          echo "PGTAG=$(grep '^${{ matrix.pg_version }}: ' orioledb/.pgtags | cut -d' ' -f2-)" >> $GITHUB_ENV
      - name: Checkout PostgreSQL code into workspace directory
        uses: actions/checkout@v3
        with:
          repository: orioledb/postgres
          ref: ${{ env.PGTAG }}
          path: postgresql
      - name: Setup prerequisites
        run: bash ./orioledb/ci/prerequisites.sh
      - name: Build
        run: bash ./orioledb/ci/build.sh
      - name: Check
        timeout-minutes: ${{ startsWith(matrix.check_type, 'valgrind_') && 120 || 20 }}
        run: bash ./orioledb/ci/check.sh
      - name: Check output
        run: bash ./orioledb/ci/check_output.sh
        if: ${{ success() || failure() }}
      - name: Show stuck processes
        run: bash ./orioledb/ci/list_stuck.sh
        if: ${{ always() }}
      - name: Codecov
        run: bash ./orioledb/ci/codecov.sh
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  static:
    runs-on:
     - ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        pg_version: [15, 16]
        compiler: [clang, gcc]
    env:
      LLVM_VER: 12
      CPU: ${{ matrix.cpu }}
      CHECK_TYPE: static
      COMPILER: ${{ matrix.compiler }}
    steps:
      - name: Checkout extension code into workspace directory
        uses: actions/checkout@v3
        with:
          path: orioledb
      - name: Get the required tag name
        shell: bash
        run: |
          echo "PGTAG=$(grep '^${{ matrix.pg_version }}: ' orioledb/.pgtags | cut -d' ' -f2-)" >> $GITHUB_ENV
      - name: Checkout PostgreSQL code into workspace directory
        uses: actions/checkout@v3
        with:
          repository: orioledb/postgres
          ref: ${{ env.PGTAG }}
          path: postgresql
      - name: Setup prerequisites
        run: bash ./orioledb/ci/prerequisites.sh
      - name: Build
        run: bash ./orioledb/ci/build.sh
      - name: Static analysis
        run: bash ./orioledb/ci/static.sh
