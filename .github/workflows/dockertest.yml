name: dockerTEST

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  test-docker-builds:
    strategy:
      fail-fast: true
      matrix:
        postgres: [16, 17]
        compiler: [clang]
        distr: [alpine, ubuntu]
        include:
          - distr-version: "3.21"
            distr: alpine
          - distr-version: "noble"
            distr: ubuntu

    # Only run on push events OR pull requests from forks
    if: |
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.distr-version == 'edge' || matrix.distr-version == 'devel' }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: docker build orioletest:${{ matrix.postgres }}-${{ matrix.compiler }}-${{ matrix.distr }}-${{ matrix.distr-version }}
        uses: docker/build-push-action@v6
        # https://github.com/docker/build-push-action
        with:
          context: .
          file: ${{ matrix.distr == 'ubuntu' && './docker/Dockerfile.ubuntu' || './docker/Dockerfile' }}
          platforms: linux/amd64
          push: false
          pull: true
          tags: orioletest:${{ matrix.postgres }}-${{ matrix.compiler }}-${{ matrix.distr }}-${{ matrix.distr-version }}
          build-args: |
            ALPINE_VERSION=${{ matrix.distr == 'alpine' && matrix.distr-version || '' }}
            UBUNTU_VERSION=${{ matrix.distr == 'ubuntu' && matrix.distr-version || '' }}
            PG_MAJOR=${{ matrix.postgres }}
            BUILD_CC_COMPILER=${{ matrix.compiler }}
            DOCKER_PG_LLVM_DEPS=llvm-dev clang
            DEBUG_MODE=false

      # docker imgage testing with https://github.com/docker-library/official-images.git
      # to check if the image is compatible with the official-images test suite
      # the special orioledb test config is in the ./test/tests/orioledb-config.sh
      # Read more: ./test/README.md
      - name: Run Docker-official-postgres tests + minimal orioledb test
        run: |
          OFFIMG_LOCAL_CLONE=./log_docker_build/official-images
          OFFIMG_REPO_URL=https://github.com/docker-library/official-images.git
          mkdir -p "$OFFIMG_LOCAL_CLONE"
          git clone --depth=1 --branch=master "$OFFIMG_REPO_URL" "$OFFIMG_LOCAL_CLONE"
          "${OFFIMG_LOCAL_CLONE}/test/run.sh" \
              -c "${OFFIMG_LOCAL_CLONE}/test/config.sh" \
              -c "docker/orioledb-config.sh" \
              orioletest:${{ matrix.postgres }}-${{ matrix.compiler }}-${{ matrix.distr }}-${{ matrix.distr-version }}

      # if you want to push the tested image
      # check this example:  https://docs.docker.com/build/ci/github-actions/test-before-push/
